// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  email               String    @unique
  password            String
  name                String
  role                String    @default("user")
  address             String?
  phone               String?
  lastLogin           DateTime?
  loginCount          Int       @default(0)
  passwordUpdatedAt   DateTime?
  failedLoginAttempts Int       @default(0)
  lockUntil           DateTime?
  resetToken          String?   @unique
  resetTokenExpiry    DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  orders              Order[]
}

model Product {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  orderStatus    String      @default("pending")
  paymentMethod  String      @default("cod")
  paymentStatus  String      @default("pending")
  total          Float
  orderItems     OrderItem[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  userId         String      @db.ObjectId
  user           User        @relation(fields: [userId], references: [id])
  email          String?
  name           String?
  contactNumber  String?
  pickupTime     DateTime?
  specialInstructions String?

  @@index([orderStatus])
  @@index([createdAt])
  @@index([userId])
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Float
  productId String   @db.ObjectId
  orderId   String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])
}
